// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic parse doesn't parse inline code block: bond 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "position": Position {
            "end": Object {
              "column": 21,
              "line": 1,
              "offset": 20,
            },
            "indent": Array [],
            "start": Object {
              "column": 1,
              "line": 1,
              "offset": 0,
            },
          },
          "type": "inlineCode",
          "value": "((ref:[[foo.md]]))",
        },
      ],
      "position": Position {
        "end": Object {
          "column": 21,
          "line": 1,
          "offset": 20,
        },
        "indent": Array [],
        "start": Object {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "paragraph",
    },
  ],
  "position": Object {
    "end": Object {
      "column": 21,
      "line": 1,
      "offset": 20,
    },
    "start": Object {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;

exports[`basic parse init 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "data": Object {
            "alias": "ref:[[foo.md]]",
            "exists": false,
            "hChildren": Array [
              Object {
                "type": "text",
                "value": "ref:[[foo.md]]",
              },
            ],
            "hName": "a",
            "hProperties": Object {
              "className": "internal new",
              "href": "ref:[[foo",
            },
            "link": Object {
              "anchorEnd": undefined,
              "anchorStart": undefined,
              "name": "foo",
              "type": "file",
            },
            "permalink": "ref:[[foo",
          },
          "position": Position {
            "end": Object {
              "column": 19,
              "line": 1,
              "offset": 18,
            },
            "indent": Array [],
            "start": Object {
              "column": 1,
              "line": 1,
              "offset": 0,
            },
          },
          "type": "refLink",
          "value": "ref:[[foo.md]]",
        },
      ],
      "position": Position {
        "end": Object {
          "column": 19,
          "line": 1,
          "offset": 18,
        },
        "indent": Array [],
        "start": Object {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "paragraph",
    },
  ],
  "position": Object {
    "end": Object {
      "column": 19,
      "line": 1,
      "offset": 18,
    },
    "start": Object {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;

exports[`basic parse with start anchor 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "data": Object {
            "alias": "ref:[[foo]]#h1",
            "exists": false,
            "hChildren": Array [
              Object {
                "type": "text",
                "value": "ref:[[foo]]#h1",
              },
            ],
            "hName": "a",
            "hProperties": Object {
              "className": "internal new",
              "href": "ref:[[foo]]#h1",
            },
            "link": Object {
              "anchorEnd": undefined,
              "anchorStart": "h1",
              "name": "foo",
              "type": "file",
            },
            "permalink": "ref:[[foo]]#h1",
          },
          "position": Position {
            "end": Object {
              "column": 19,
              "line": 1,
              "offset": 18,
            },
            "indent": Array [],
            "start": Object {
              "column": 1,
              "line": 1,
              "offset": 0,
            },
          },
          "type": "refLink",
          "value": "ref:[[foo]]#h1",
        },
      ],
      "position": Position {
        "end": Object {
          "column": 19,
          "line": 1,
          "offset": 18,
        },
        "indent": Array [],
        "start": Object {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "paragraph",
    },
  ],
  "position": Object {
    "end": Object {
      "column": 19,
      "line": 1,
      "offset": 18,
    },
    "start": Object {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;

exports[`basic parse with start and end 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "data": Object {
            "alias": "ref:[[foo]]#h1:#h2",
            "exists": false,
            "hChildren": Array [
              Object {
                "type": "text",
                "value": "ref:[[foo]]#h1:#h2",
              },
            ],
            "hName": "a",
            "hProperties": Object {
              "className": "internal new",
              "href": "ref:[[foo]]#h1:#h2",
            },
            "link": Object {
              "anchorEnd": "h2",
              "anchorStart": "h1",
              "name": "foo",
              "type": "file",
            },
            "permalink": "ref:[[foo]]#h1:#h2",
          },
          "position": Position {
            "end": Object {
              "column": 23,
              "line": 1,
              "offset": 22,
            },
            "indent": Array [],
            "start": Object {
              "column": 1,
              "line": 1,
              "offset": 0,
            },
          },
          "type": "refLink",
          "value": "ref:[[foo]]#h1:#h2",
        },
      ],
      "position": Position {
        "end": Object {
          "column": 23,
          "line": 1,
          "offset": 22,
        },
        "indent": Array [],
        "start": Object {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "paragraph",
    },
  ],
  "position": Object {
    "end": Object {
      "column": 23,
      "line": 1,
      "offset": 22,
    },
    "start": Object {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;

exports[`basic parse without suffix 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "data": Object {
            "alias": "ref:[[foo]]",
            "exists": false,
            "hChildren": Array [
              Object {
                "type": "text",
                "value": "ref:[[foo]]",
              },
            ],
            "hName": "a",
            "hProperties": Object {
              "className": "internal new",
              "href": "ref:[[foo]]",
            },
            "link": Object {
              "anchorEnd": undefined,
              "anchorStart": undefined,
              "name": "foo",
              "type": "file",
            },
            "permalink": "ref:[[foo]]",
          },
          "position": Position {
            "end": Object {
              "column": 16,
              "line": 1,
              "offset": 15,
            },
            "indent": Array [],
            "start": Object {
              "column": 1,
              "line": 1,
              "offset": 0,
            },
          },
          "type": "refLink",
          "value": "ref:[[foo]]",
        },
      ],
      "position": Position {
        "end": Object {
          "column": 16,
          "line": 1,
          "offset": 15,
        },
        "indent": Array [],
        "start": Object {
          "column": 1,
          "line": 1,
          "offset": 0,
        },
      },
      "type": "paragraph",
    },
  ],
  "position": Object {
    "end": Object {
      "column": 16,
      "line": 1,
      "offset": 15,
    },
    "start": Object {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;

exports[`basic stingify 2 lvl recursion 1`] = `
"# Foo

# Foo.One

# Foo.Two

blah


"
`;

exports[`basic stingify 3 levels of recursion 1`] = `
"# Foo

# Foo.One

# Foo.Two

ERROR: Too many nested note references


"
`;

exports[`basic stingify basic 1`] = `
"# Tasks

task1
task2


"
`;

exports[`basic stingify basic block 1`] = `
"# Foo Bar

# Tasks

task1
task2


"
`;

exports[`basic stingify basic block with fm 1`] = `
"# Foo Bar

# Tasks

task1
task2


"
`;

exports[`basic stingify basic block with header and start  1`] = `
"# Foo Bar

## Header2

task2


"
`;

exports[`basic stingify basic block with header and start, offset  1`] = `
"# Foo Bar


task2


"
`;

exports[`basic stingify basic block with header and start, start invalid  1`] = `
"# Foo Bar

### Note Ref Error

start anchor badheader not found  


"
`;

exports[`basic stingify basic block with header, start and end  1`] = `
"# Foo Bar

## Header1

task1


"
`;

exports[`basic stingify basic block with header, start and end, end invalid  1`] = `
"# Foo Bar

### Note Ref Error

end anchor badheader not found  


"
`;

exports[`basic stingify basic block with header, start and end, offset  1`] = `
"# Foo Bar


task1


"
`;

exports[`basic stingify basic block with wildcard as 1st elem  1`] = `
"# Foo Bar


## Header1

task1


"
`;

exports[`basic stingify basic block with wildcard as 2nd elem  1`] = `
"# Foo Bar


task1


"
`;

exports[`basic stingify missing ref 1`] = `
"# Foo Bar

### Note Ref Error

missing not found  


"
`;

exports[`basic stingify missing ref 2`] = `
Array [
  [Error: missing not found],
]
`;

exports[`basic stingify ref with ref, inf recursion 1`] = `
"# Foo

# Foo.One

# Foo.Two

ERROR: Too many nested note references


"
`;

exports[`basic stingify renderWithOutline 1`] = `
"# Foo Bar



<div class=\\"portal-container\\">
<div class=\\"portal-head\\">
<div class=\\"portal-backlink\\" >
<div class=\\"portal-title\\">From <span class=\\"portal-text-title\\">daily.tasks</span></div>
<a href=\\"daily.tasks.html\\" class=\\"portal-arrow\\">Go to text <span class=\\"right-arrow\\">→</span></a>
</div>
</div>
<div id=\\"portal-parent-anchor\\" class=\\"portal-parent\\" markdown=\\"1\\">
<div class=\\"portal-parent-fader-top\\"></div>
<div class=\\"portal-parent-fader-bottom\\"></div>        
  
## Header1

task1



</div>    
</div>

"
`;
